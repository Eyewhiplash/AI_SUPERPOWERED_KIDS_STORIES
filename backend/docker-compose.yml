version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: kids_stories_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-kids_stories_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kids_stories_pass}
      POSTGRES_DB: ${POSTGRES_DB:-kids_stories_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kids_stories_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache & Task Queue
  redis:
    image: redis:7-alpine
    container_name: kids_stories_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # FastAPI Application
  api:
    build: .
    container_name: kids_stories_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-kids_stories_user}:${POSTGRES_PASSWORD:-kids_stories_pass}@db:5432/${POSTGRES_DB:-kids_stories_db}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro  # Read-only mount for development
    restart: unless-stopped

  # Celery Worker for Background Tasks
  worker:
    build: .
    container_name: kids_stories_worker
    command: celery -A app.tasks.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-kids_stories_user}:${POSTGRES_PASSWORD:-kids_stories_pass}@db:5432/${POSTGRES_DB:-kids_stories_db}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: kids_stories_network 